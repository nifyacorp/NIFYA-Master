{
  "timestamp": "2025-04-04T12:28:20.113Z",
  "summary": {
    "total": 9,
    "passed": 7,
    "failed": 2,
    "skipped": 0
  },
  "categories": {
    "authentication": {
      "total": 1,
      "passed": 1,
      "failed": 0
    },
    "infrastructure": {
      "total": 1,
      "passed": 1,
      "failed": 0
    },
    "subscriptions": {
      "total": 3,
      "passed": 2,
      "failed": 1
    },
    "notifications": {
      "total": 3,
      "passed": 2,
      "failed": 1
    },
    "diagnostics": {
      "total": 1,
      "passed": 1,
      "failed": 0
    }
  },
  "tests": [
    {
      "name": "Authentication: Login",
      "category": "authentication",
      "success": true,
      "output": [
        "\u001b[36m[2025-04-04T12:28:20.177Z] [INFO] Starting test login...\u001b[0m",
        "\u001b[32m[2025-04-04T12:28:20.579Z] [SUCCESS] Authentication successful! Token saved (first 10 chars): eyJhbGciOi...\u001b[0m",
        "\u001b[36m[2025-04-04T12:28:20.581Z] [INFO] Test login completed successfully\u001b[0m"
      ],
      "critical": true
    },
    {
      "name": "Infrastructure: Health Check",
      "category": "infrastructure",
      "success": true,
      "output": [
        "\u001b[36m[2025-04-04T12:28:20.642Z] [INFO] Starting health check test\u001b[0m",
        "\u001b[32m[2025-04-04T12:28:20.877Z] [SUCCESS] Health check successful:",
        "\u001b[32m[2025-04-04T12:28:20.881Z] [SUCCESS] Database connection verified\u001b[0m",
        "\u001b[36m[2025-04-04T12:28:20.883Z] [INFO] Health check test completed successfully\u001b[0m"
      ],
      "critical": true
    },
    {
      "name": "Subscriptions: List",
      "category": "subscriptions",
      "success": true,
      "output": [
        "\u001b[36m[2025-04-04T12:28:20.947Z] [INFO] Starting list subscriptions test\u001b[0m",
        "\u001b[36m[2025-04-04T12:28:20.952Z] [INFO] Fetching subscriptions: backend-415554190254.us-central1.run.app/api/v1/subscriptions\u001b[0m",
        "\u001b[32m[2025-04-04T12:28:21.217Z] [SUCCESS] Retrieved 0 subscriptions\u001b[0m",
        "\u001b[32m[2025-04-04T12:28:21.219Z] [SUCCESS] Test list-subscriptions: PASSED",
        "\u001b[32m[2025-04-04T12:28:21.222Z] [SUCCESS] Subscription listing test completed successfully\u001b[0m",
        "\u001b[36m[2025-04-04T12:28:21.224Z] [INFO] Retrieved 0 subscriptions\u001b[0m"
      ],
      "critical": true
    },
    {
      "name": "Subscriptions: Create",
      "category": "subscriptions",
      "success": true,
      "output": [
        "\u001b[36m[2025-04-04T12:28:21.287Z] [INFO] Starting minimal subscription creation test\u001b[0m",
        "\u001b[36m[2025-04-04T12:28:21.291Z] [INFO] Creating minimal subscription: backend-415554190254.us-central1.run.app/api/v1/subscriptions",
        "\u001b[32m[2025-04-04T12:28:21.540Z] [SUCCESS] Minimal subscription created with ID: 5fe24106-35c4-4d7f-b8e2-7421b6b9b078\u001b[0m",
        "\u001b[32m[2025-04-04T12:28:21.543Z] [SUCCESS] Test minimal-create-subscription: PASSED",
        "\u001b[32m[2025-04-04T12:28:21.547Z] [SUCCESS] Minimal subscription creation test completed successfully\u001b[0m",
        "\u001b[36m[2025-04-04T12:28:21.549Z] [INFO] Created subscription ID: 5fe24106-35c4-4d7f-b8e2-7421b6b9b078\u001b[0m"
      ],
      "critical": true
    },
    {
      "name": "Subscriptions: Create with User ID",
      "category": "subscriptions",
      "success": false,
      "output": [
        "\u001b[36m[2025-04-04T12:28:21.613Z] [INFO] Starting subscription creation with explicit user_id test\u001b[0m",
        "\u001b[36m[2025-04-04T12:28:21.617Z] [INFO] Creating subscription with user_id: backend-415554190254.us-central1.run.app/api/v1/subscriptions",
        "\u001b[31m[2025-04-04T12:28:21.832Z] [ERROR] Subscription creation failed with status code 400",
        "\u001b[31m[2025-04-04T12:28:21.834Z] [ERROR] Test user-id-create-subscription: FAILED",
        "\u001b[32m[2025-04-04T12:28:21.836Z] [SUCCESS] Subscription creation with user_id test completed\u001b[0m"
      ],
      "critical": false
    },
    {
      "name": "Notifications: List",
      "category": "notifications",
      "success": false,
      "error": "Command failed: node tests/notifications/poll.js",
      "critical": true
    },
    {
      "name": "Notifications: By Entity Type",
      "category": "notifications",
      "success": true,
      "output": [
        "\u001b[36m[2025-04-04T12:29:09.610Z] [INFO] Starting notifications by entity test\u001b[0m",
        "\u001b[36m[2025-04-04T12:29:09.615Z] [INFO] Testing notifications for entity type: subscription, with entityId param\u001b[0m",
        "\u001b[33m[2025-04-04T12:29:09.887Z] [WARN] Received 200 status but data is not in expected format\u001b[0m",
        "\u001b[32m[2025-04-04T12:29:09.889Z] [SUCCESS] Test notifications-by-entity: PASSED but with unexpected format",
        "\u001b[32m[2025-04-04T12:29:09.891Z] [SUCCESS] Notifications by entity test completed\u001b[0m"
      ],
      "critical": false
    },
    {
      "name": "Notifications: Activity",
      "category": "notifications",
      "success": true,
      "output": [
        "\u001b[36m[2025-04-04T12:29:09.959Z] [INFO] Starting notification activity test\u001b[0m",
        "\u001b[36m[2025-04-04T12:29:09.964Z] [INFO] Fetching notification activity: backend-415554190254.us-central1.run.app/api/v1/notifications/activity\u001b[0m",
        "\u001b[32m[2025-04-04T12:29:10.233Z] [SUCCESS] Retrieved notification activity successfully\u001b[0m",
        "\u001b[32m[2025-04-04T12:29:10.235Z] [SUCCESS] Test notification-activity: PASSED\u001b[0m",
        "\u001b[32m[2025-04-04T12:29:10.237Z] [SUCCESS] Notification activity test completed\u001b[0m"
      ],
      "critical": false
    },
    {
      "name": "Diagnostics: API Info",
      "category": "diagnostics",
      "success": true,
      "output": [
        "\u001b[36m[2025-04-04T12:29:10.311Z] [INFO] Starting database diagnostic test\u001b[0m",
        "\u001b[36m[2025-04-04T12:29:10.317Z] [INFO] Testing endpoint: /health\u001b[0m",
        "\u001b[32m[2025-04-04T12:29:10.537Z] [SUCCESS] Endpoint /health returned success: {",
        "\u001b[36m[2025-04-04T12:29:10.539Z] [INFO] Testing endpoint: /api/diagnostics\u001b[0m",
        "\u001b[32m[2025-04-04T12:29:10.702Z] [SUCCESS] Endpoint /api/diagnostics returned success: {",
        "\u001b[36m[2025-04-04T12:29:10.705Z] [INFO] Testing endpoint: /api/diagnostics/db-status\u001b[0m",
        "\u001b[32m[2025-04-04T12:29:10.848Z] [SUCCESS] Endpoint /api/diagnostics/db-status returned success: {",
        "\u001b[36m[2025-04-04T12:29:10.851Z] [INFO] Testing endpoint: /api/diagnostics/db-tables\u001b[0m",
        "\u001b[32m[2025-04-04T12:29:10.990Z] [SUCCESS] Endpoint /api/diagnostics/db-tables returned success: {",
        "\u001b[32m[2025-04-04T12:29:10.992Z] [SUCCESS] Database diagnostic test completed\u001b[0m"
      ],
      "critical": false
    }
  ]
}