---
description: 
globs: 
alwaysApply: true
---
# Your rule content

- You can @ files here
- You can use markdown but dont have to
# NIFYA Repository Compendium

This project is a compendium of interconnected repositories that work together to provide the NIFYA service. Each subservice has its own build and deployment pipeline.

## Development Workflow

1. Make changes to the relevant subservice code
2. Commit your changes to the repository
3. Push/sync your changes to trigger the build process
4. Monitor the build process in the deployment platform

## Subservices and Deployment URLs

| Service | Description | Deployment URL |
|---------|-------------|----------------|
| Frontend | User interface and client-side application | https://clever-kelpie-60c3a6.netlify.app |
| Backend | Core API and business logic | https://backend-415554190254.us-central1.run.app |
| Subscription Worker | Manages subscription processing | https://subscription-worker-415554190254.us-central1.run.app |
| BOE Parser | AI-powered analysis of Spanish Official Bulletin (BOE) | https://boe-parser-415554190254.us-central1.run.app |
| DOGA Parser | AI-powered analysis of Galician Official Bulletin (DOGA) | https://doga-parser-415554190254.us-central1.run.app |
| EU Parser | AI-powered analysis of European Union Official Journal | https://eu-parser-415554190254.us-central1.run.app |
| Notification Worker | Processes notification messages and stores them in the database | https://notification-worker-415554190254.us-central1.run.app |
| Email Notification | Sends email summaries of notifications to users | https://email-notification-415554190254.us-central1.run.app |

You can edit each submodule directly, indeed you are instructed to apply the necessary modifications requested by the user. Once done, commit and sync each module. Once synced, the cloud builds will start automatically, you will need to wait for them to finish before the next test run. If you prepare a script that uses puppeteer to test the site, try to use that same script all the time, avoid creating multiple scripts. Remember the test scripts are used to gather information on the bugs of the web app, and so we can fix them. The app is built in Netlify, so do not change the local build here. Once a submodule is changed, you have to commit the corresponding GitHub repository and sync content, the app will build automatically on the cloud, you have to wait a little bit. ALWAYS USE THE SAME TESTING SCRIPT

## Code Standards

1. Always use the standardized UI components from the component library
2. Follow the single source of truth concept for styles, configurations, and data
3. Make minimal necessary changes to fix issues without introducing new features unless specifically requested
4. Ensure all buttons using the Button component from our UI library with appropriate props
5. Keep functionality consistent across all services
